useEffect(() => {
    if (virtuosoRef.current) {
      try {
        const lastItemIndex = yourDataArray.length - 1;
        virtuosoRef.current.scrollToIndex(lastItemIndex);
      } catch (error) {
        console.error('Error scrolling to index:', error);
      }
    }
  }, [yourDataArray]);

  useEffect(() => {
    if (divRef.current && virtuosoRef.current) {
      try {
        const resizeObserver = new ResizeObserver((entries) => {
          for (const entry of entries) {
            if (entry.contentRect) {
              divRef.current.style.height = `${entry.contentRect.height}px`;
            }
          }
        });

        resizeObserver.observe(virtuosoRef.current);

        return () => {
          try {
            resizeObserver.unobserve(virtuosoRef.current);
          } catch (error) {
            console.error('Error unobserving ResizeObserver:', error);
          }
        };
      } catch (error) {
        console.error('Error initializing ResizeObserver:', error);
      }
    }
  }, [virtuosoRef, divRef]);
